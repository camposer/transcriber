apply plugin: "java"
apply plugin: "idea"
apply plugin: "kotlin" // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.jetbrains.kotlin.jvm"

sourceCompatibility = 1.8

buildscript {
    ext {
        spring_boot_version = "2.1.0.RELEASE"
        spek_version = "1.1.5"
        aws_version = "1.11.513"
        kotlin_version = "1.3.11"
        klaxon_version = "5.0.1"
        mockito_version = "2.23.0"
        junit_version = "5.3.1"
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.amazonaws:aws-java-sdk:$aws_version")
    compile("com.beust:klaxon:$klaxon_version")
    // testCompile("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.mockito:mockito-junit-jupiter:$mockito_version")
    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")
}

jar {
    baseName = "transcriber"
    version = "0.1.0"
}